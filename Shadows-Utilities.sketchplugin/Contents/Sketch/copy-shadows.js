var that = this;
function __skpm_run (key, context) {
  that.context = context;

var exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/commands/copy-shadows.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/commands/copy-shadows.js":
/*!**************************************!*\
  !*** ./src/commands/copy-shadows.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function () {
  __webpack_require__(/*! ../scripts/output.js */ "./src/scripts/output.js")["Main"].copyShadows();
});

/***/ }),

/***/ "./src/scripts/output.js":
/*!*******************************!*\
  !*** ./src/scripts/output.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

// Generated by purs bundle 0.12.5
var PS = {};

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];

  var Alt = function Alt(Functor0, alt) {
    this.Functor0 = Functor0;
    this.alt = alt;
  };

  var alt = function alt(dict) {
    return dict.alt;
  };

  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];

  var Apply = function Apply(Functor0, apply) {
    this.Functor0 = Functor0;
    this.apply = apply;
  };

  var apply = function apply(dict) {
    return dict.apply;
  };

  exports["Apply"] = Apply;
  exports["apply"] = apply;
})(PS);

(function (exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];

  var Applicative = function Applicative(Apply0, pure) {
    this.Apply0 = Apply0;
    this.pure = pure;
  };

  var pure = function pure(dict) {
    return dict.pure;
  };

  var unless = function unless(dictApplicative) {
    return function (v) {
      return function (v1) {
        if (!v) {
          return v1;
        }

        ;

        if (v) {
          return pure(dictApplicative)(Data_Unit.unit);
        }

        ;
        throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };

  var liftA1 = function liftA1(dictApplicative) {
    return function (f) {
      return function (a) {
        return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
      };
    };
  };

  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];

  var flip = function flip(f) {
    return function (b) {
      return function (a) {
        return f(a)(b);
      };
    };
  };

  var $$const = function $$const(a) {
    return function (v) {
      return a;
    };
  };

  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var Data_Function = $PS["Data.Function"];

  var Discard = function Discard(discard) {
    this.discard = discard;
  };

  var Bind = function Bind(Apply0, bind) {
    this.Apply0 = Apply0;
    this.bind = bind;
  };

  var discard = function discard(dict) {
    return dict.discard;
  };

  var bind = function bind(dict) {
    return dict.bind;
  };

  var bindFlipped = function bindFlipped(dictBind) {
    return Data_Function.flip(bind(dictBind));
  };

  var composeKleisli = function composeKleisli(dictBind) {
    return function (f) {
      return function (g) {
        return function (a) {
          return bind(dictBind)(f(a))(g);
        };
      };
    };
  };

  var discardUnit = new Discard(function (dictBind) {
    return bind(dictBind);
  });
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["Discard"] = Discard;
  exports["discard"] = discard;
  exports["composeKleisli"] = composeKleisli;
  exports["discardUnit"] = discardUnit;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];

  var Semigroupoid = function Semigroupoid(compose) {
    this.compose = compose;
  };

  var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
      return function (x) {
        return f(g(x));
      };
    };
  });

  var compose = function compose(dict) {
    return dict.compose;
  };

  var composeFlipped = function composeFlipped(dictSemigroupoid) {
    return function (f) {
      return function (g) {
        return compose(dictSemigroupoid)(g)(f);
      };
    };
  };

  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["composeFlipped"] = composeFlipped;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];

  var Category = function Category(Semigroupoid0, identity) {
    this.Semigroupoid0 = Semigroupoid0;
    this.identity = identity;
  };

  var identity = function identity(dict) {
    return dict.identity;
  };

  var categoryFn = new Category(function () {
    return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
    return x;
  });
  exports["Category"] = Category;
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];

  var Monad = function Monad(Applicative0, Bind1) {
    this.Applicative0 = Applicative0;
    this.Bind1 = Bind1;
  };

  var ap = function ap(dictMonad) {
    return function (f) {
      return function (a) {
        return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
          return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
            return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
          });
        });
      };
    };
  };

  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];

  var MonadThrow = function MonadThrow(Monad0, throwError) {
    this.Monad0 = Monad0;
    this.throwError = throwError;
  };

  var throwError = function throwError(dict) {
    return dict.throwError;
  };

  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];

  var Bifunctor = function Bifunctor(bimap) {
    this.bimap = bimap;
  };

  var bimap = function bimap(dict) {
    return dict.bimap;
  };

  var lmap = function lmap(dictBifunctor) {
    return function (f) {
      return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
    };
  };

  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["lmap"] = lmap;
})(PS);

(function (exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);

      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }

      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];

  var Functor = function Functor(map) {
    this.map = map;
  };

  var map = function map(dict) {
    return dict.map;
  };

  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];

  var Left = function () {
    function Left(value0) {
      this.value0 = value0;
    }

    ;

    Left.create = function (value0) {
      return new Left(value0);
    };

    return Left;
  }();

  var Right = function () {
    function Right(value0) {
      this.value0 = value0;
    }

    ;

    Right.create = function (value0) {
      return new Right(value0);
    };

    return Right;
  }();

  var functorEither = new Data_Functor.Functor(function (f) {
    return function (m) {
      if (m instanceof Left) {
        return new Left(m.value0);
      }

      ;

      if (m instanceof Right) {
        return new Right(f(m.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 38, column 8 - line 38, column 52): " + [m.constructor.name]);
    };
  });

  var either = function either(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Left) {
          return v(v2.value0);
        }

        ;

        if (v2 instanceof Right) {
          return v1(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };

  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Left) {
          return new Left(v(v2.value0));
        }

        ;

        if (v2 instanceof Right) {
          return new Right(v1(v2.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 46, column 45): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  });
  var applyEither = new Control_Apply.Apply(function () {
    return functorEither;
  }, function (v) {
    return function (v1) {
      if (v instanceof Left) {
        return new Left(v.value0);
      }

      ;

      if (v instanceof Right) {
        return Data_Functor.map(functorEither)(v.value0)(v1);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 82, column 41): " + [v.constructor.name, v1.constructor.name]);
    };
  });
  var applicativeEither = new Control_Applicative.Applicative(function () {
    return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];

  var Semigroup = function Semigroup(append) {
    this.append = append;
  };

  var append = function append(dict) {
    return dict.append;
  };

  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var ExceptT = function ExceptT(x) {
    return x;
  };

  var runExceptT = function runExceptT(v) {
    return v;
  };

  var mapExceptT = function mapExceptT(f) {
    return function (v) {
      return f(v);
    };
  };

  var functorExceptT = function functorExceptT(dictFunctor) {
    return new Data_Functor.Functor(function (f) {
      return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
    });
  };

  var monadExceptT = function monadExceptT(dictMonad) {
    return new Control_Monad.Monad(function () {
      return applicativeExceptT(dictMonad);
    }, function () {
      return bindExceptT(dictMonad);
    });
  };

  var bindExceptT = function bindExceptT(dictMonad) {
    return new Control_Bind.Bind(function () {
      return applyExceptT(dictMonad);
    }, function (v) {
      return function (k) {
        return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
          return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
        })(function (a) {
          var v1 = k(a);
          return v1;
        }));
      };
    });
  };

  var applyExceptT = function applyExceptT(dictMonad) {
    return new Control_Apply.Apply(function () {
      return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    }, Control_Monad.ap(monadExceptT(dictMonad)));
  };

  var applicativeExceptT = function applicativeExceptT(dictMonad) {
    return new Control_Applicative.Applicative(function () {
      return applyExceptT(dictMonad);
    }, function ($98) {
      return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
    });
  };

  var monadThrowExceptT = function monadThrowExceptT(dictMonad) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
      return monadExceptT(dictMonad);
    }, function ($102) {
      return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
    });
  };

  var altExceptT = function altExceptT(dictSemigroup) {
    return function (dictMonad) {
      return new Control_Alt.Alt(function () {
        return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
      }, function (v) {
        return function (v1) {
          return Control_Bind.bind(dictMonad.Bind1())(v)(function (v2) {
            if (v2 instanceof Data_Either.Right) {
              return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v2.value0));
            }

            ;

            if (v2 instanceof Data_Either.Left) {
              return Control_Bind.bind(dictMonad.Bind1())(v1)(function (v3) {
                if (v3 instanceof Data_Either.Right) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(v3.value0));
                }

                ;

                if (v3 instanceof Data_Either.Left) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v2.value0)(v3.value0)));
                }

                ;
                throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 86, column 9 - line 88, column 49): " + [v3.constructor.name]);
              });
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 82, column 5 - line 88, column 49): " + [v2.constructor.name]);
          });
        };
      });
    };
  };

  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["altExceptT"] = altExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];

  var Newtype = function Newtype(unwrap, wrap) {
    this.unwrap = unwrap;
    this.wrap = wrap;
  };

  var wrap = function wrap(dict) {
    return dict.wrap;
  };

  var unwrap = function unwrap(dict) {
    return dict.unwrap;
  };

  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];

  var Identity = function Identity(x) {
    return x;
  };

  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
    return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
    return function (m) {
      return f(m);
    };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
    return functorIdentity;
  }, function (v) {
    return function (v1) {
      return v(v1);
    };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
    return applyIdentity;
  }, function (v) {
    return function (f) {
      return f(v);
    };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
    return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
    return applicativeIdentity;
  }, function () {
    return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];

  var runExcept = function runExcept($0) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
  };

  var mapExcept = function mapExcept(f) {
    return Control_Monad_Except_Trans.mapExceptT(function ($1) {
      return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
    });
  };

  exports["runExcept"] = runExcept;
  exports["mapExcept"] = mapExcept;
})(PS);

(function (exports) {
  "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.pure_ = function (a) {
    return function () {
      return a;
    };
  };

  exports.bind_ = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.ST.Internal"] = $PS["Control.Monad.ST.Internal"] || {};
  var exports = $PS["Control.Monad.ST.Internal"];
  var $foreign = $PS["Control.Monad.ST.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var functorST = new Data_Functor.Functor($foreign.map_);
  var monadST = new Control_Monad.Monad(function () {
    return applicativeST;
  }, function () {
    return bindST;
  });
  var bindST = new Control_Bind.Bind(function () {
    return applyST;
  }, $foreign.bind_);
  var applyST = new Control_Apply.Apply(function () {
    return functorST;
  }, Control_Monad.ap(monadST));
  var applicativeST = new Control_Applicative.Applicative(function () {
    return applyST;
  }, $foreign.pure_);
  exports["functorST"] = functorST;
  exports["applyST"] = applyST;
  exports["applicativeST"] = applicativeST;
  exports["bindST"] = bindST;
  exports["monadST"] = monadST;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];

  var Plus = function Plus(Alt0, empty) {
    this.Alt0 = Alt0;
    this.empty = empty;
  };

  var empty = function empty(dict) {
    return dict.empty;
  };

  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS);

(function (exports) {
  "use strict"; //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start,
          n = 0;

      while (i !== end) {
        result[n++] = i;
        i += step;
      }

      result[n] = i;
      return result;
    };
  }; //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.length = function (xs) {
    return xs.length;
  }; //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing : just(xs[i]);
        };
      };
    };
  }; //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);

        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }

        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];

  var Nothing = function () {
    function Nothing() {}

    ;
    Nothing.value = new Nothing();
    return Nothing;
  }();

  var Just = function () {
    function Just(value0) {
      this.value0 = value0;
    }

    ;

    Just.create = function (value0) {
      return new Just(value0);
    };

    return Just;
  }();

  var maybe = function maybe(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Nothing) {
          return v;
        }

        ;

        if (v2 instanceof Just) {
          return v1(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };

  var isNothing = maybe(true)(Data_Function["const"](false));
  var functorMaybe = new Data_Functor.Functor(function (v) {
    return function (v1) {
      if (v1 instanceof Just) {
        return new Just(v(v1.value0));
      }

      ;
      return Nothing.value;
    };
  });

  var fromJust = function fromJust(dictPartial) {
    return function (v) {
      if (v instanceof Just) {
        return v.value0;
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [v.constructor.name]);
    };
  };

  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Data_Maybe = $PS["Data.Maybe"];
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

  var head = function head(xs) {
    return index(xs)(0);
  };

  exports["head"] = head;
  exports["index"] = index;
  exports["range"] = $foreign.range;
  exports["length"] = $foreign.length;
  exports["zipWith"] = $foreign.zipWith;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);

(function (exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;

        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }

        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;

        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }

        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];

  var mempty = function mempty(dict) {
    return dict.mempty;
  };

  exports["mempty"] = mempty;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Foldable = function Foldable(foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
  };

  var foldr = function foldr(dict) {
    return dict.foldr;
  };

  var foldl = function foldl(dict) {
    return dict.foldl;
  };

  var foldMapDefaultR = function foldMapDefaultR(dictFoldable) {
    return function (dictMonoid) {
      return function (f) {
        return foldr(dictFoldable)(function (x) {
          return function (acc) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
          };
        })(Data_Monoid.mempty(dictMonoid));
      };
    };
  };

  var foldableArray = new Foldable(function (dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);

  var foldMap = function foldMap(dict) {
    return dict.foldMap;
  };

  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldableArray"] = foldableArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {};
  var exports = $PS["Data.Generic.Rep"];

  var Constructor = function Constructor(x) {
    return x;
  };

  var Generic = function Generic(from, to) {
    this.from = from;
    this.to = to;
  };

  var to = function to(dict) {
    return dict.to;
  };

  var from = function from(dict) {
    return dict.from;
  };

  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["Constructor"] = Constructor;
})(PS);

(function (exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["fromNumber"] = fromNumber;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Functor = $PS["Data.Functor"];

  var NonEmpty = function () {
    function NonEmpty(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    NonEmpty.create = function (value0) {
      return function (value1) {
        return new NonEmpty(value0, value1);
      };
    };

    return NonEmpty;
  }();

  var singleton = function singleton(dictPlus) {
    return function (a) {
      return new NonEmpty(a, Control_Plus.empty(dictPlus));
    };
  };

  var functorNonEmpty = function functorNonEmpty(dictFunctor) {
    return new Data_Functor.Functor(function (f) {
      return function (m) {
        return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
      };
    });
  };

  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["functorNonEmpty"] = functorNonEmpty;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Nil = function () {
    function Nil() {}

    ;
    Nil.value = new Nil();
    return Nil;
  }();

  var Cons = function () {
    function Cons(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Cons.create = function (value0) {
      return function (value1) {
        return new Cons(value0, value1);
      };
    };

    return Cons;
  }();

  var NonEmptyList = function NonEmptyList(x) {
    return x;
  };

  var toList = function toList(v) {
    return new Cons(v.value0, v.value1);
  };

  var listMap = function listMap(f) {
    var chunkedRevMap = function chunkedRevMap($copy_chunksAcc) {
      return function ($copy_v) {
        var $tco_var_chunksAcc = $copy_chunksAcc;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(chunksAcc, v) {
          if (v instanceof Cons && v.value1 instanceof Cons && v.value1.value1 instanceof Cons) {
            $tco_var_chunksAcc = new Cons(v, chunksAcc);
            $copy_v = v.value1.value1.value1;
            return;
          }

          ;

          var unrolledMap = function unrolledMap(v1) {
            if (v1 instanceof Cons && v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil) {
              return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
            }

            ;

            if (v1 instanceof Cons && v1.value1 instanceof Nil) {
              return new Cons(f(v1.value0), Nil.value);
            }

            ;
            return Nil.value;
          };

          var reverseUnrolledMap = function reverseUnrolledMap($copy_v1) {
            return function ($copy_acc) {
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(v1, acc) {
                if (v1 instanceof Cons && v1.value0 instanceof Cons && v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons) {
                  $tco_var_v1 = v1.value1;
                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                  return;
                }

                ;
                $tco_done = true;
                return acc;
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v1, $copy_acc);
              }

              ;
              return $tco_result;
            };
          };

          $tco_done = true;
          return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
        }

        ;
        return $tco_result;
      };
    };

    return chunkedRevMap(Nil.value);
  };

  var functorList = new Data_Functor.Functor(listMap);
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      return Data_Foldable.foldl(foldableList)(function (acc) {
        return function ($202) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($202));
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  }, function (f) {
    var go = function go($copy_b) {
      return function ($copy_v) {
        var $tco_var_b = $copy_b;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(b, v) {
          if (v instanceof Nil) {
            $tco_done = true;
            return b;
          }

          ;

          if (v instanceof Cons) {
            $tco_var_b = f(b)(v.value0);
            $copy_v = v.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_b, $copy_v);
        }

        ;
        return $tco_result;
      };
    };

    return go;
  }, function (f) {
    return function (b) {
      var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
      return function ($203) {
        return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($203));
      };
    };
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
    return function (ys) {
      return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
    };
  });
  var semigroupNonEmptyList = new Data_Semigroup.Semigroup(function (v) {
    return function (as$prime) {
      return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
    };
  });
  var altList = new Control_Alt.Alt(function () {
    return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
    return altList;
  }, Nil.value);
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["toList"] = toList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
  exports["functorNonEmptyList"] = functorNonEmptyList;
  exports["semigroupNonEmptyList"] = semigroupNonEmptyList;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];

  var Tuple = function () {
    function Tuple(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Tuple.create = function (value0) {
      return function (value1) {
        return new Tuple(value0, value1);
      };
    };

    return Tuple;
  }();

  var snd = function snd(v) {
    return v.value1;
  };

  var fst = function fst(v) {
    return v.value0;
  };

  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
})(PS);

(function (exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;

              while (true) {
                // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});

(function (exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;

              while (true) {
                // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];

  var Unfoldable1 = function Unfoldable1(unfoldr1) {
    this.unfoldr1 = unfoldr1;
  };

  var unfoldr1 = function unfoldr1(dict) {
    return dict.unfoldr1;
  };

  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable1"] = Unfoldable1;
  exports["unfoldr1"] = unfoldr1;
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];

  var Unfoldable = function Unfoldable(Unfoldable10, unfoldr) {
    this.Unfoldable10 = Unfoldable10;
    this.unfoldr = unfoldr;
  };

  var unfoldr = function unfoldr(dict) {
    return dict.unfoldr;
  };

  var unfoldableArray = new Unfoldable(function () {
    return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];

  var uncons = function uncons(v) {
    if (v instanceof Data_List_Types.Nil) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      return new Data_Maybe.Just({
        head: v.value0,
        tail: v.value1
      });
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [v.constructor.name]);
  };

  var toUnfoldable = function toUnfoldable(dictUnfoldable) {
    return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
        return new Data_Tuple.Tuple(rec.head, rec.tail);
      })(uncons(xs));
    });
  };

  var tail = function tail(v) {
    if (v instanceof Data_List_Types.Nil) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      return new Data_Maybe.Just(v.value1);
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): " + [v.constructor.name]);
  };

  var singleton = function singleton(a) {
    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };

  var $$null = function $$null(v) {
    if (v instanceof Data_List_Types.Nil) {
      return true;
    }

    ;
    return false;
  };

  var head = function head(v) {
    if (v instanceof Data_List_Types.Nil) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v instanceof Data_List_Types.Cons) {
      return new Data_Maybe.Just(v.value0);
    }

    ;
    throw new Error("Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): " + [v.constructor.name]);
  };

  var fromFoldable = function fromFoldable(dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };

  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["null"] = $$null;
  exports["head"] = head;
  exports["tail"] = tail;
  exports["uncons"] = uncons;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];

  var singleton = function singleton($165) {
    return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($165));
  };

  exports["singleton"] = singleton;
})(PS);

(function (exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(/[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
    function (c, i) {
      switch (c) {
        case "\"":
        case "\\":
          return "\\" + c;

        case "\x07":
          return "\\a";

        case "\b":
          return "\\b";

        case "\f":
          return "\\f";

        case "\n":
          return "\\n";

        case "\r":
          return "\\r";

        case "\t":
          return "\\t";

        case "\v":
          return "\\v";
      }

      var k = i + 1;
      var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
      return "\\" + c.charCodeAt(0).toString(10) + empty;
    }) + "\"";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];

  var Show = function Show(show) {
    this.show = show;
  };

  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);

  var show = function show(dict) {
    return dict.show;
  };

  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];

  var SProxy = function () {
    function SProxy() {}

    ;
    SProxy.value = new SProxy();
    return SProxy;
  }();

  var IsSymbol = function IsSymbol(reflectSymbol) {
    this.reflectSymbol = reflectSymbol;
  };

  var reflectSymbol = function reflectSymbol(dict) {
    return dict.reflectSymbol;
  };

  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);

(function (exports) {
  "use strict"; // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                  case 0:
                    return pure([]);

                  case 1:
                    return map(array1)(f(array[bot]));

                  case 2:
                    return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));

                  case 3:
                    return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));

                  default:
                    // This slightly tricky pivot selection aims to produce two
                    // even-length partitions where possible.
                    var pivot = bot + Math.floor((top - bot) / 4) * 2;
                    return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }

              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];

  var Traversable = function Traversable(Foldable1, Functor0, sequence, traverse) {
    this.Foldable1 = Foldable1;
    this.Functor0 = Functor0;
    this.sequence = sequence;
    this.traverse = traverse;
  };

  var traverse = function traverse(dict) {
    return dict.traverse;
  };

  var sequenceDefault = function sequenceDefault(dictTraversable) {
    return function (dictApplicative) {
      return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
    };
  };

  var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
  }, function () {
    return Data_Functor.functorArray;
  }, function (dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map(dictApplicative.Apply0().Functor0()))(Control_Applicative.pure(dictApplicative));
  });

  var sequence = function sequence(dict) {
    return dict.sequence;
  };

  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traversableArray"] = traversableArray;
})(PS);

(function (exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var monadEffect = new Control_Monad.Monad(function () {
    return applicativeEffect;
  }, function () {
    return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
    return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
    return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
    return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS);

(function (exports) {
  "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return _typeof(value);
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };

  exports.isNull = function (value) {
    return value === null;
  };

  exports.isUndefined = function (value) {
    return value === undefined;
  };

  exports.isArray = Array.isArray || function (value) {
    return Object.prototype.toString.call(value) === "[object Array]";
  };
})(PS["Foreign"] = PS["Foreign"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Int = $PS["Data.Int"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_Maybe = $PS["Data.Maybe"];

  var ForeignError = function () {
    function ForeignError(value0) {
      this.value0 = value0;
    }

    ;

    ForeignError.create = function (value0) {
      return new ForeignError(value0);
    };

    return ForeignError;
  }();

  var TypeMismatch = function () {
    function TypeMismatch(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    TypeMismatch.create = function (value0) {
      return function (value1) {
        return new TypeMismatch(value0, value1);
      };
    };

    return TypeMismatch;
  }();

  var ErrorAtIndex = function () {
    function ErrorAtIndex(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ErrorAtIndex.create = function (value0) {
      return function (value1) {
        return new ErrorAtIndex(value0, value1);
      };
    };

    return ErrorAtIndex;
  }();

  var ErrorAtProperty = function () {
    function ErrorAtProperty(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ErrorAtProperty.create = function (value0) {
      return function (value1) {
        return new ErrorAtProperty(value0, value1);
      };
    };

    return ErrorAtProperty;
  }();

  var fail = function fail($107) {
    return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($107));
  };

  var readArray = function readArray(value) {
    if ($foreign.isArray(value)) {
      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
    }

    ;

    if (Data_Boolean.otherwise) {
      return fail(new TypeMismatch("array", $foreign.tagOf(value)));
    }

    ;
    throw new Error("Failed pattern match at Foreign (line 147, column 1 - line 147, column 42): " + [value.constructor.name]);
  };

  var unsafeReadTagged = function unsafeReadTagged(tag) {
    return function (value) {
      if ($foreign.tagOf(value) === tag) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
      }

      ;

      if (Data_Boolean.otherwise) {
        return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
      }

      ;
      throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [tag.constructor.name, value.constructor.name]);
    };
  };

  var readBoolean = unsafeReadTagged("Boolean");
  var readNumber = unsafeReadTagged("Number");

  var readInt = function readInt(value) {
    var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));

    var fromNumber = function fromNumber($108) {
      return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($108));
    };

    return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
  };

  var readString = unsafeReadTagged("String");
  exports["ForeignError"] = ForeignError;
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["readBoolean"] = readBoolean;
  exports["readNumber"] = readNumber;
  exports["readInt"] = readInt;
  exports["readArray"] = readArray;
  exports["fail"] = fail;
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
  exports["typeOf"] = $foreign.typeOf;
  exports["isNull"] = $foreign.isNull;
  exports["isUndefined"] = $foreign.isUndefined;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.NullOrUndefined"] = $PS["Foreign.NullOrUndefined"] || {};
  var exports = $PS["Foreign.NullOrUndefined"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Foreign = $PS["Foreign"];

  var readNullOrUndefined = function readNullOrUndefined(v) {
    return function (value) {
      if (Foreign.isNull(value) || Foreign.isUndefined(value)) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
      }

      ;
      return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Maybe.Just.create)(v(value));
    };
  };

  exports["readNullOrUndefined"] = readNullOrUndefined;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Class"] = $PS["Foreign.Class"] || {};
  var exports = $PS["Foreign.Class"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Foreign = $PS["Foreign"];
  var Foreign_NullOrUndefined = $PS["Foreign.NullOrUndefined"];

  var Encode = function Encode(encode) {
    this.encode = encode;
  };

  var Decode = function Decode(decode) {
    this.decode = decode;
  };

  var stringEncode = new Encode(Foreign.unsafeToForeign);
  var stringDecode = new Decode(Foreign.readString);
  var numberEncode = new Encode(Foreign.unsafeToForeign);
  var numberDecode = new Decode(Foreign.readNumber);
  var intDecode = new Decode(Foreign.readInt);

  var encode = function encode(dict) {
    return dict.encode;
  };

  var decode = function decode(dict) {
    return dict.decode;
  };

  var maybeDecode = function maybeDecode(dictDecode) {
    return new Decode(Foreign_NullOrUndefined.readNullOrUndefined(decode(dictDecode)));
  };

  var booleanEncode = new Encode(Foreign.unsafeToForeign);
  var booleanDecode = new Decode(Foreign.readBoolean);

  var arrayEncode = function arrayEncode(dictEncode) {
    return new Encode(function ($17) {
      return Foreign.unsafeToForeign(Data_Functor.map(Data_Functor.functorArray)(encode(dictEncode))($17));
    });
  };

  var arrayDecode = function arrayDecode(dictDecode) {
    return new Decode(function () {
      var readElement = function readElement(i) {
        return function (value) {
          return Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(i))))(decode(dictDecode)(value));
        };
      };

      var readElements = function readElements(arr) {
        return Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
      };

      return Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readArray)(readElements);
    }());
  };

  exports["decode"] = decode;
  exports["encode"] = encode;
  exports["Decode"] = Decode;
  exports["Encode"] = Encode;
  exports["stringDecode"] = stringDecode;
  exports["booleanDecode"] = booleanDecode;
  exports["numberDecode"] = numberDecode;
  exports["intDecode"] = intDecode;
  exports["arrayDecode"] = arrayDecode;
  exports["maybeDecode"] = maybeDecode;
  exports["stringEncode"] = stringEncode;
  exports["booleanEncode"] = booleanEncode;
  exports["numberEncode"] = numberEncode;
  exports["arrayEncode"] = arrayEncode;
})(PS);

(function (exports) {
  "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  exports.unsafeHasOwnProperty = function (prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function (prop, value) {
    return prop in value;
  };
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Index"] = $PS["Foreign.Index"] || {};
  var exports = $PS["Foreign.Index"];
  var $foreign = $PS["Foreign.Index"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Function = $PS["Data.Function"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign = $PS["Foreign"];

  var Index = function Index(errorAt, hasOwnProperty, hasProperty, index) {
    this.errorAt = errorAt;
    this.hasOwnProperty = hasOwnProperty;
    this.hasProperty = hasProperty;
    this.index = index;
  };

  var unsafeReadProp = function unsafeReadProp(k) {
    return function (value) {
      return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
    };
  };

  var readProp = unsafeReadProp;

  var index = function index(dict) {
    return dict.index;
  };

  var hasPropertyImpl = function hasPropertyImpl(v) {
    return function (value) {
      if (Foreign.isNull(value)) {
        return false;
      }

      ;

      if (Foreign.isUndefined(value)) {
        return false;
      }

      ;

      if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
        return $foreign.unsafeHasProperty(v, value);
      }

      ;
      return false;
    };
  };

  var hasProperty = function hasProperty(dict) {
    return dict.hasProperty;
  };

  var hasOwnPropertyImpl = function hasOwnPropertyImpl(v) {
    return function (value) {
      if (Foreign.isNull(value)) {
        return false;
      }

      ;

      if (Foreign.isUndefined(value)) {
        return false;
      }

      ;

      if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
        return $foreign.unsafeHasOwnProperty(v, value);
      }

      ;
      return false;
    };
  };

  var indexString = new Index(Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp));

  var hasOwnProperty = function hasOwnProperty(dict) {
    return dict.hasOwnProperty;
  };

  var errorAt = function errorAt(dict) {
    return dict.errorAt;
  };

  exports["Index"] = Index;
  exports["readProp"] = readProp;
  exports["index"] = index;
  exports["hasProperty"] = hasProperty;
  exports["hasOwnProperty"] = hasOwnProperty;
  exports["errorAt"] = errorAt;
  exports["indexString"] = indexString;
})(PS);

(function (exports) {
  "use strict";

  exports._copyST = function (m) {
    return function () {
      var r = {};

      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }

      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f();
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;

          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }

          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }

          return acc;
        };
      };
    };
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];

      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }

      return r;
    };
  }
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});

(function (exports) {
  "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Object.ST"] = $PS["Foreign.Object.ST"] || {};
  var exports = $PS["Foreign.Object.ST"];
  var $foreign = $PS["Foreign.Object.ST"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];
  var thawST = $foreign["_copyST"];

  var singleton = function singleton(k) {
    return function (v) {
      return $foreign.runST(Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST)(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST["new"]));
    };
  };

  var mutate = function mutate(f) {
    return function (m) {
      return $foreign.runST(function __do() {
        var v = thawST(m)();
        var v1 = f(v)();
        return v;
      });
    };
  };

  var insert = function insert(k) {
    return function (v) {
      return mutate(Foreign_Object_ST.poke(k)(v));
    };
  };

  var foldM = function foldM(dictMonad) {
    return function (f) {
      return function (z) {
        return $foreign["_foldM"](Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
      };
    };
  };

  var union = function union(m) {
    return mutate(function (s) {
      return foldM(Control_Monad_ST_Internal.monadST)(function (s$prime) {
        return function (k) {
          return function (v) {
            return Foreign_Object_ST.poke(k)(v)(s$prime);
          };
        };
      })(s)(m);
    });
  };

  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["union"] = union;
  exports["foldM"] = foldM;
  exports["thawST"] = thawST;
  exports["empty"] = $foreign.empty;
})(PS);

(function (exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Record"] = $PS["Record"] || {};
  var exports = $PS["Record"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];

  var get = function get(dictIsSymbol) {
    return function (dictCons) {
      return function (l) {
        return function (r) {
          return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
        };
      };
    };
  };

  exports["get"] = get;
})(PS);

(function (exports) {
  "use strict";

  exports.copyRecord = function (rec) {
    var copy = {};

    for (var key in rec) {
      if ({}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }

    return copy;
  };

  exports.unsafeInsert = function (l) {
    return function (a) {
      return function (rec) {
        rec[l] = a;
        return rec;
      };
    };
  };
})(PS["Record.Builder"] = PS["Record.Builder"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Record.Builder"] = $PS["Record.Builder"] || {};
  var exports = $PS["Record.Builder"];
  var $foreign = $PS["Record.Builder"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Symbol = $PS["Data.Symbol"];
  var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;

  var insert = function insert(dictCons) {
    return function (dictLacks) {
      return function (dictIsSymbol) {
        return function (l) {
          return function (a) {
            return function (r1) {
              return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
            };
          };
        };
      };
    };
  };

  var categoryBuilder = Control_Category.categoryFn;

  var build = function build(v) {
    return function (r1) {
      return v($foreign.copyRecord(r1));
    };
  };

  exports["build"] = build;
  exports["insert"] = insert;
  exports["semigroupoidBuilder"] = semigroupoidBuilder;
  exports["categoryBuilder"] = categoryBuilder;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Type.Data.RowList"] = $PS["Type.Data.RowList"] || {};
  var exports = $PS["Type.Data.RowList"];

  var RLProxy = function () {
    function RLProxy() {}

    ;
    RLProxy.value = new RLProxy();
    return RLProxy;
  }();

  exports["RLProxy"] = RLProxy;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Type.Proxy"] = $PS["Type.Proxy"] || {};
  var exports = $PS["Type.Proxy"];

  var $$Proxy = function () {
    function $$Proxy() {}

    ;
    $$Proxy.value = new $$Proxy();
    return $$Proxy;
  }();

  exports["Proxy"] = $$Proxy;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Generic.Class"] = $PS["Foreign.Generic.Class"] || {};
  var exports = $PS["Foreign.Generic.Class"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Foreign = $PS["Foreign"];
  var Foreign_Class = $PS["Foreign.Class"];
  var Foreign_Index = $PS["Foreign.Index"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Record = $PS["Record"];
  var Record_Builder = $PS["Record.Builder"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];
  var Type_Proxy = $PS["Type.Proxy"];

  var GenericEncodeArgs = function GenericEncodeArgs(encodeArgs) {
    this.encodeArgs = encodeArgs;
  };

  var GenericEncode = function GenericEncode(encodeOpts) {
    this.encodeOpts = encodeOpts;
  };

  var GenericDecodeArgs = function GenericDecodeArgs(decodeArgs) {
    this.decodeArgs = decodeArgs;
  };

  var GenericDecode = function GenericDecode(decodeOpts) {
    this.decodeOpts = decodeOpts;
  };

  var GenericCountArgs = function GenericCountArgs(countArgs) {
    this.countArgs = countArgs;
  };

  var Encode_ = function Encode_(encode_) {
    this.encode_ = encode_;
  };

  var EncodeRecord = function EncodeRecord(encodeRecord_) {
    this.encodeRecord_ = encodeRecord_;
  };

  var Decode_ = function Decode_(decode_) {
    this.decode_ = decode_;
  };

  var DecodeRecord = function DecodeRecord(decodeRecord_) {
    this.decodeRecord_ = decodeRecord_;
  };

  var genericCountArgsArgument = new GenericCountArgs(function (v) {
    return new Data_Either.Right(1);
  });

  var encode_Other = function encode_Other(dictEncode) {
    return new Encode_(function (v) {
      return Foreign_Class.encode(dictEncode);
    });
  };

  var encode_ = function encode_(dict) {
    return dict.encode_;
  };

  var genericEncodeArgsArgument = function genericEncodeArgsArgument(dictEncode_) {
    return new GenericEncodeArgs(function (opts) {
      return function (v) {
        return Data_List.singleton(encode_(dictEncode_)(opts)(v));
      };
    });
  };

  var encodeRecord_ = function encodeRecord_(dict) {
    return dict.encodeRecord_;
  };

  var encode_Record = function encode_Record(dictRowToList) {
    return function (dictEncodeRecord) {
      return new Encode_(function (opts) {
        return function ($147) {
          return Foreign.unsafeToForeign(encodeRecord_(dictEncodeRecord)(Type_Data_RowList.RLProxy.value)(opts)($147));
        };
      });
    };
  };

  var encodeRecordNil = new EncodeRecord(function (v) {
    return function (v1) {
      return function (v2) {
        return Foreign_Object.empty;
      };
    };
  });

  var encodeRecordCons = function encodeRecordCons(dictCons) {
    return function (dictEncodeRecord) {
      return function (dictIsSymbol) {
        return function (dictEncode_) {
          return new EncodeRecord(function (v) {
            return function (opts) {
              return function (rec) {
                var obj = encodeRecord_(dictEncodeRecord)(Type_Data_RowList.RLProxy.value)(opts)(rec);
                var l = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                return Foreign_Object.insert(opts.fieldTransform(l))(encode_(dictEncode_)(opts)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(rec)))(obj);
              };
            };
          });
        };
      };
    };
  };

  var encodeOpts = function encodeOpts(dict) {
    return dict.encodeOpts;
  };

  var encodeArgs = function encodeArgs(dict) {
    return dict.encodeArgs;
  };

  var genericEncodeConstructor = function genericEncodeConstructor(dictIsSymbol) {
    return function (dictGenericEncodeArgs) {
      return new GenericEncode(function (opts) {
        return function (v) {
          var unwrapArguments = function unwrapArguments(v1) {
            if (v1.length === 0) {
              return Data_Maybe.Nothing.value;
            }

            ;

            if (v1.length === 1 && opts.unwrapSingleArguments) {
              return new Data_Maybe.Just(v1[0]);
            }

            ;
            return new Data_Maybe.Just(Foreign.unsafeToForeign(v1));
          };

          var encodeArgsArray = function encodeArgsArray($148) {
            return unwrapArguments(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray)(encodeArgs(dictGenericEncodeArgs)(opts)($148)));
          };

          var ctorName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);

          if (opts.unwrapSingleConstructors) {
            return Data_Maybe.maybe(Foreign.unsafeToForeign({}))(Foreign.unsafeToForeign)(encodeArgsArray(v));
          }

          ;
          return Foreign.unsafeToForeign(Foreign_Object.union(Foreign_Object.singleton(opts.sumEncoding.value0.tagFieldName)(Foreign.unsafeToForeign(opts.sumEncoding.value0.constructorTagTransform(ctorName))))(Data_Maybe.maybe(Foreign_Object.empty)(Foreign_Object.singleton(opts.sumEncoding.value0.contentsFieldName))(encodeArgsArray(v))));
        };
      });
    };
  };

  var decode_Other = function decode_Other(dictDecode) {
    return new Decode_(function (v) {
      return Foreign_Class.decode(dictDecode);
    });
  };

  var decode_ = function decode_(dict) {
    return dict.decode_;
  };

  var genericDecodeArgsArgument = function genericDecodeArgsArgument(dictDecode_) {
    return new GenericDecodeArgs(function (v) {
      return function (v1) {
        return function (v2) {
          if (v2 instanceof Data_List_Types.Cons) {
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(v1))))(decode_(dictDecode_)(v)(v2.value0)))(function (v3) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                result: v3,
                rest: v2.value1,
                next: v1 + 1 | 0
              });
            });
          }

          ;
          return Foreign.fail(new Foreign.ForeignError("Not enough constructor arguments"));
        };
      };
    });
  };

  var decodeRecord_ = function decodeRecord_(dict) {
    return dict.decodeRecord_;
  };

  var decode_Record = function decode_Record(dictRowToList) {
    return function (dictDecodeRecord) {
      return new Decode_(function (opts) {
        return Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Function.flip(Record_Builder.build)({})))(decodeRecord_(dictDecodeRecord)(Type_Data_RowList.RLProxy.value)(opts));
      });
    };
  };

  var decodeRecordNil = new DecodeRecord(function (v) {
    return function (v1) {
      return function (v2) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Category.identity(Record_Builder.categoryBuilder));
      };
    };
  });

  var decodeRecordCons = function decodeRecordCons(dictCons) {
    return function (dictDecodeRecord) {
      return function (dictIsSymbol) {
        return function (dictDecode_) {
          return function (dictLacks) {
            return new DecodeRecord(function (v) {
              return function (opts) {
                return function (f) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeRecord_(dictDecodeRecord)(Type_Data_RowList.RLProxy.value)(opts)(f))(function (v1) {
                    var l = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                    var l_transformed = opts.fieldTransform(l);
                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(l_transformed))(function (v2) {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(l_transformed))))(decode_(dictDecode_)(opts)(v2)))(function (v3) {
                        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(v1)(Record_Builder.insert(dictCons)(dictLacks)(dictIsSymbol)(Data_Symbol.SProxy.value)(v3)));
                      });
                    });
                  });
                };
              };
            });
          };
        };
      };
    };
  };

  var decodeOpts = function decodeOpts(dict) {
    return dict.decodeOpts;
  };

  var decodeArgs = function decodeArgs(dict) {
    return dict.decodeArgs;
  };

  var countArgs = function countArgs(dict) {
    return dict.countArgs;
  };

  var genericDecodeConstructor = function genericDecodeConstructor(dictIsSymbol) {
    return function (dictGenericDecodeArgs) {
      return function (dictGenericCountArgs) {
        return new GenericDecode(function (opts) {
          return function (f) {
            var numArgs = countArgs(dictGenericCountArgs)(Type_Proxy["Proxy"].value);

            var readArguments = function readArguments(args) {
              if (numArgs instanceof Data_Either.Left) {
                return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(numArgs.value0);
              }

              ;

              if (numArgs instanceof Data_Either.Right && numArgs.value0 === 1 && opts.unwrapSingleArguments) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(0)(Data_List.singleton(args)))(function (v) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_List["null"](v.rest))(Foreign.fail(new Foreign.ForeignError("Expected a single argument"))))(function () {
                    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v.result);
                  });
                });
              }

              ;

              if (numArgs instanceof Data_Either.Right) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign.readArray(args))(function (v) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(decodeArgs(dictGenericDecodeArgs)(opts)(0)(Data_List.fromFoldable(Data_Foldable.foldableArray)(v)))(function (v1) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_List["null"](v1.rest))(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showInt)(numArgs.value0) + " constructor arguments")))))(function () {
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v1.result);
                    });
                  });
                });
              }

              ;
              throw new Error("Failed pattern match at Foreign.Generic.Class (line 75, column 9 - line 87, column 24): " + [numArgs.constructor.name]);
            };

            var ctorName = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);

            if (opts.unwrapSingleConstructors) {
              return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.Constructor)(readArguments(f));
            }

            ;
            return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(opts.sumEncoding.value0.tagFieldName))))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(opts.sumEncoding.value0.tagFieldName))(Foreign.readString))(function (v) {
              var expected = opts.sumEncoding.value0.constructorTagTransform(ctorName);
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Applicative.unless(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v === expected)(Foreign.fail(new Foreign.ForeignError("Expected " + (Data_Show.show(Data_Show.showString)(expected) + " tag")))))(function () {
                return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v);
              });
            })))(function (v) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(opts.sumEncoding.value0.contentsFieldName))))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.index(Foreign_Index.indexString)(f)(opts.sumEncoding.value0.contentsFieldName))(readArguments)))(function (v1) {
                return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v1);
              });
            });
          };
        });
      };
    };
  };

  exports["countArgs"] = countArgs;
  exports["decodeArgs"] = decodeArgs;
  exports["decodeOpts"] = decodeOpts;
  exports["decodeRecord_"] = decodeRecord_;
  exports["decode_"] = decode_;
  exports["encodeArgs"] = encodeArgs;
  exports["encodeOpts"] = encodeOpts;
  exports["encodeRecord_"] = encodeRecord_;
  exports["encode_"] = encode_;
  exports["GenericDecode"] = GenericDecode;
  exports["GenericEncode"] = GenericEncode;
  exports["GenericDecodeArgs"] = GenericDecodeArgs;
  exports["GenericEncodeArgs"] = GenericEncodeArgs;
  exports["GenericCountArgs"] = GenericCountArgs;
  exports["Decode_"] = Decode_;
  exports["Encode_"] = Encode_;
  exports["DecodeRecord"] = DecodeRecord;
  exports["EncodeRecord"] = EncodeRecord;
  exports["genericDecodeConstructor"] = genericDecodeConstructor;
  exports["genericEncodeConstructor"] = genericEncodeConstructor;
  exports["genericDecodeArgsArgument"] = genericDecodeArgsArgument;
  exports["genericEncodeArgsArgument"] = genericEncodeArgsArgument;
  exports["genericCountArgsArgument"] = genericCountArgsArgument;
  exports["decode_Record"] = decode_Record;
  exports["decode_Other"] = decode_Other;
  exports["encode_Record"] = encode_Record;
  exports["encode_Other"] = encode_Other;
  exports["decodeRecordNil"] = decodeRecordNil;
  exports["encodeRecordNil"] = encodeRecordNil;
  exports["decodeRecordCons"] = decodeRecordCons;
  exports["encodeRecordCons"] = encodeRecordCons;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Generic.Types"] = $PS["Foreign.Generic.Types"] || {};
  var exports = $PS["Foreign.Generic.Types"];

  var TaggedObject = function () {
    function TaggedObject(value0) {
      this.value0 = value0;
    }

    ;

    TaggedObject.create = function (value0) {
      return new TaggedObject(value0);
    };

    return TaggedObject;
  }();

  exports["TaggedObject"] = TaggedObject;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Generic"] = $PS["Foreign.Generic"] || {};
  var exports = $PS["Foreign.Generic"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign_Generic_Class = $PS["Foreign.Generic.Class"];
  var Foreign_Generic_Types = $PS["Foreign.Generic.Types"];

  var genericEncode = function genericEncode(dictGeneric) {
    return function (dictGenericEncode) {
      return function (opts) {
        return function ($10) {
          return Foreign_Generic_Class.encodeOpts(dictGenericEncode)(opts)(Data_Generic_Rep.from(dictGeneric)($10));
        };
      };
    };
  };

  var genericDecode = function genericDecode(dictGeneric) {
    return function (dictGenericDecode) {
      return function (opts) {
        return function ($12) {
          return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Generic_Rep.to(dictGeneric))(Foreign_Generic_Class.decodeOpts(dictGenericDecode)(opts)($12));
        };
      };
    };
  };

  var defaultOptions = {
    sumEncoding: new Foreign_Generic_Types.TaggedObject({
      tagFieldName: "tag",
      contentsFieldName: "contents",
      constructorTagTransform: Control_Category.identity(Control_Category.categoryFn)
    }),
    unwrapSingleConstructors: false,
    unwrapSingleArguments: true,
    fieldTransform: Control_Category.identity(Control_Category.categoryFn)
  };
  exports["defaultOptions"] = defaultOptions;
  exports["genericDecode"] = genericDecode;
  exports["genericEncode"] = genericEncode;
})(PS);

(function (exports) {
  "use strict";

  var dom = __webpack_require__(/*! sketch/dom */ "sketch/dom");

  exports["setShadowsForLayerID"] = function (id) {
    return function (data) {
      return function () {
        var layer = dom.getSelectedDocument().getLayerWithID(id);
        layer.style.shadows = data;
        return {};
      };
    };
  };

  exports["removeShadowsForLayerID"] = function (id) {
    return function () {
      var layer = dom.getSelectedDocument().getLayerWithID(id);
      layer.style.shadows = [];
      return {};
    };
  };
})(PS["Main"] = PS["Main"] || {});

(function (exports) {
  "use strict";

  var dom = __webpack_require__(/*! sketch/dom */ "sketch/dom");

  exports["selection"] = function () {
    return dom.getSelectedDocument().selectedLayers.layers;
  };
})(PS["Sketch.Dom"] = PS["Sketch.Dom"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Sketch.Types"] = $PS["Sketch.Types"] || {};
  var exports = $PS["Sketch.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Foreign_Class = $PS["Foreign.Class"];
  var Foreign_Generic = $PS["Foreign.Generic"];
  var Foreign_Generic_Class = $PS["Foreign.Generic.Class"];

  var Artboard = function () {
    function Artboard(value0) {
      this.value0 = value0;
    }

    ;

    Artboard.create = function (value0) {
      return new Artboard(value0);
    };

    return Artboard;
  }();

  var Text = function () {
    function Text(value0) {
      this.value0 = value0;
    }

    ;

    Text.create = function (value0) {
      return new Text(value0);
    };

    return Text;
  }();

  var Image = function () {
    function Image(value0) {
      this.value0 = value0;
    }

    ;

    Image.create = function (value0) {
      return new Image(value0);
    };

    return Image;
  }();

  var Shape = function () {
    function Shape(value0) {
      this.value0 = value0;
    }

    ;

    Shape.create = function (value0) {
      return new Shape(value0);
    };

    return Shape;
  }();

  var Group = function () {
    function Group(value0) {
      this.value0 = value0;
    }

    ;

    Group.create = function (value0) {
      return new Group(value0);
    };

    return Group;
  }();

  var genericTextStyle = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericTextLayer = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericStop = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericShapeStyle = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericShapeLayer = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericShadow = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericPoints = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericPoint = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericImageStyle = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericImageLayer = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericImageData = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericGroupStyle = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericGroupLayer = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericGradient = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericFrame = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericFill = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericExportFormat = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericBorder = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericBackground = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var genericArtboardLayer = new Data_Generic_Rep.Generic(function (x) {
    return x;
  }, function (x) {
    return x;
  });
  var encodeShadow = new Foreign_Class.Encode(Foreign_Generic.genericEncode(genericShadow)(Foreign_Generic_Class.genericEncodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "Shadow";
  }))(Foreign_Generic_Class.genericEncodeArgsArgument(Foreign_Generic_Class.encode_Record()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordCons()(Foreign_Generic_Class.encodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "y";
  }))(Foreign_Generic_Class.encode_Other(Foreign_Class.numberEncode)))(new Data_Symbol.IsSymbol(function () {
    return "x";
  }))(Foreign_Generic_Class.encode_Other(Foreign_Class.numberEncode)))(new Data_Symbol.IsSymbol(function () {
    return "spread";
  }))(Foreign_Generic_Class.encode_Other(Foreign_Class.numberEncode)))(new Data_Symbol.IsSymbol(function () {
    return "enabled";
  }))(Foreign_Generic_Class.encode_Other(Foreign_Class.booleanEncode)))(new Data_Symbol.IsSymbol(function () {
    return "color";
  }))(Foreign_Generic_Class.encode_Other(Foreign_Class.stringEncode)))(new Data_Symbol.IsSymbol(function () {
    return "blur";
  }))(Foreign_Generic_Class.encode_Other(Foreign_Class.numberEncode))))))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeTextStyle = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericTextStyle)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "TextStyle";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "verticalAlignment";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "type";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "textTransform";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "textColor";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "opacity";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "lineHeight";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.maybeDecode(Foreign_Class.numberDecode)))())(new Data_Symbol.IsSymbol(function () {
    return "kerning";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.maybeDecode(Foreign_Class.numberDecode)))())(new Data_Symbol.IsSymbol(function () {
    return "id";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "fontWeight";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "fontSize";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "fontFamily";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "alignment";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeStop = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericStop)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "Stop";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "position";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.intDecode))())(new Data_Symbol.IsSymbol(function () {
    return "color";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeShadow = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericShadow)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "Shadow";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "y";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "x";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "spread";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "enabled";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
    return "color";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "blur";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodePoint = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericPoint)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "Point";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "y";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "x";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodePoints = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericPoints)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "Points";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "type";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "pointType";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "point";
  }))(Foreign_Generic_Class.decode_Other(decodePoint))())(new Data_Symbol.IsSymbol(function () {
    return "curveTo";
  }))(Foreign_Generic_Class.decode_Other(decodePoint))())(new Data_Symbol.IsSymbol(function () {
    return "curveFrom";
  }))(Foreign_Generic_Class.decode_Other(decodePoint))())(new Data_Symbol.IsSymbol(function () {
    return "cornerRadius";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeImageStyle = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericImageStyle)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "ImageStyle";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "type";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "opacity";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "id";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeImageData = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericImageData)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "ImageData";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "type";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "id";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeGroupStyle = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericGroupStyle)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "GroupStyle";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "type";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "opacity";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "id";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeGradient = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericGradient)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "Gradient";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "to";
  }))(Foreign_Generic_Class.decode_Other(decodePoint))())(new Data_Symbol.IsSymbol(function () {
    return "stops";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.arrayDecode(decodeStop)))())(new Data_Symbol.IsSymbol(function () {
    return "gradientType";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "from";
  }))(Foreign_Generic_Class.decode_Other(decodePoint))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeFrame = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericFrame)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "Frame";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "y";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "x";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "width";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "height";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeImageLayer = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericImageLayer)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "ImageLayer";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "type";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "style";
  }))(Foreign_Generic_Class.decode_Other(decodeImageStyle))())(new Data_Symbol.IsSymbol(function () {
    return "name";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "locked";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
    return "image";
  }))(Foreign_Generic_Class.decode_Other(decodeImageData))())(new Data_Symbol.IsSymbol(function () {
    return "id";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "hidden";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
    return "frame";
  }))(Foreign_Generic_Class.decode_Other(decodeFrame))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeTextLayer = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericTextLayer)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "TextLayer";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "type";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "text";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "style";
  }))(Foreign_Generic_Class.decode_Other(decodeTextStyle))())(new Data_Symbol.IsSymbol(function () {
    return "name";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "locked";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
    return "lineSpacing";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "id";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "hidden";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
    return "frame";
  }))(Foreign_Generic_Class.decode_Other(decodeFrame))())(new Data_Symbol.IsSymbol(function () {
    return "fixedWidth";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeFill = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericFill)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "Fill";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "gradient";
  }))(Foreign_Generic_Class.decode_Other(decodeGradient))())(new Data_Symbol.IsSymbol(function () {
    return "fill";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "enabled";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
    return "color";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeExportFormat = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericExportFormat)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "ExportFormat";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "type";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "size";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "fileFormat";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeBorder = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericBorder)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "Border";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "thickness";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "position";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "fillType";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "enabled";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
    return "color";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeShapeStyle = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericShapeStyle)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "ShapeStyle";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "type";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "shadows";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.maybeDecode(Foreign_Class.arrayDecode(decodeShadow))))())(new Data_Symbol.IsSymbol(function () {
    return "opacity";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.numberDecode))())(new Data_Symbol.IsSymbol(function () {
    return "id";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "fills";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.maybeDecode(Foreign_Class.arrayDecode(decodeFill))))())(new Data_Symbol.IsSymbol(function () {
    return "borders";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.maybeDecode(Foreign_Class.arrayDecode(decodeBorder))))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeShapeLayer = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericShapeLayer)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "ShapeLayer";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "type";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "style";
  }))(Foreign_Generic_Class.decode_Other(decodeShapeStyle))())(new Data_Symbol.IsSymbol(function () {
    return "shapeType";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "points";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.arrayDecode(decodePoints)))())(new Data_Symbol.IsSymbol(function () {
    return "name";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "locked";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
    return "id";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
    return "hidden";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
    return "frame";
  }))(Foreign_Generic_Class.decode_Other(decodeFrame))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeBackground = new Foreign_Class.Decode(Foreign_Generic.genericDecode(genericBackground)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
    return "Background";
  }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
    return "includedInExport";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
    return "enabled";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
    return "color";
  }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())))(Foreign_Generic_Class.genericCountArgsArgument))({
    sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
    unwrapSingleConstructors: true,
    unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
    fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
  }));
  var decodeLayer = new Foreign_Class.Decode(function (str) {
    return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Artboard.create)(Foreign_Class.decode(decodeArtboardLayer)(str)))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Text.create)(Foreign_Class.decode(decodeTextLayer)(str))))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Image.create)(Foreign_Class.decode(decodeImageLayer)(str))))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Shape.create)(Foreign_Class.decode(decodeShapeLayer)(str))))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Group.create)(Foreign_Class.decode(decodeGroupLayer)(str)));
  });
  var decodeGroupLayer = new Foreign_Class.Decode(function (x) {
    return Foreign_Generic.genericDecode(genericGroupLayer)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
      return "GroupLayer";
    }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
      return "type";
    }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
      return "style";
    }))(Foreign_Generic_Class.decode_Other(decodeGroupStyle))())(new Data_Symbol.IsSymbol(function () {
      return "name";
    }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
      return "locked";
    }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
      return "layers";
    }))(Foreign_Generic_Class.decode_Other(Foreign_Class.arrayDecode(decodeLayer)))())(new Data_Symbol.IsSymbol(function () {
      return "id";
    }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
      return "hidden";
    }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
      return "frame";
    }))(Foreign_Generic_Class.decode_Other(decodeFrame))())))(Foreign_Generic_Class.genericCountArgsArgument))({
      sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
      unwrapSingleConstructors: true,
      unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
      fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
    })(x);
  });
  var decodeArtboardLayer = new Foreign_Class.Decode(function (x) {
    return Foreign_Generic.genericDecode(genericArtboardLayer)(Foreign_Generic_Class.genericDecodeConstructor(new Data_Symbol.IsSymbol(function () {
      return "ArtboardLayer";
    }))(Foreign_Generic_Class.genericDecodeArgsArgument(Foreign_Generic_Class.decode_Record()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordCons()(Foreign_Generic_Class.decodeRecordNil)(new Data_Symbol.IsSymbol(function () {
      return "type";
    }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
      return "selected";
    }))(Foreign_Generic_Class.decode_Other(Foreign_Class.booleanDecode))())(new Data_Symbol.IsSymbol(function () {
      return "name";
    }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
      return "layers";
    }))(Foreign_Generic_Class.decode_Other(Foreign_Class.arrayDecode(decodeLayer)))())(new Data_Symbol.IsSymbol(function () {
      return "id";
    }))(Foreign_Generic_Class.decode_Other(Foreign_Class.stringDecode))())(new Data_Symbol.IsSymbol(function () {
      return "frame";
    }))(Foreign_Generic_Class.decode_Other(decodeFrame))())(new Data_Symbol.IsSymbol(function () {
      return "exportFormats";
    }))(Foreign_Generic_Class.decode_Other(Foreign_Class.arrayDecode(decodeExportFormat)))())(new Data_Symbol.IsSymbol(function () {
      return "background";
    }))(Foreign_Generic_Class.decode_Other(decodeBackground))())))(Foreign_Generic_Class.genericCountArgsArgument))({
      sumEncoding: Foreign_Generic.defaultOptions.sumEncoding,
      unwrapSingleConstructors: true,
      unwrapSingleArguments: Foreign_Generic.defaultOptions.unwrapSingleArguments,
      fieldTransform: Foreign_Generic.defaultOptions.fieldTransform
    })(x);
  });
  exports["Artboard"] = Artboard;
  exports["Text"] = Text;
  exports["Image"] = Image;
  exports["Shape"] = Shape;
  exports["Group"] = Group;
  exports["genericFrame"] = genericFrame;
  exports["decodeFrame"] = decodeFrame;
  exports["decodeLayer"] = decodeLayer;
  exports["genericArtboardLayer"] = genericArtboardLayer;
  exports["decodeArtboardLayer"] = decodeArtboardLayer;
  exports["genericTextLayer"] = genericTextLayer;
  exports["decodeTextLayer"] = decodeTextLayer;
  exports["genericTextStyle"] = genericTextStyle;
  exports["decodeTextStyle"] = decodeTextStyle;
  exports["genericGroupLayer"] = genericGroupLayer;
  exports["decodeGroupLayer"] = decodeGroupLayer;
  exports["genericGroupStyle"] = genericGroupStyle;
  exports["decodeGroupStyle"] = decodeGroupStyle;
  exports["genericImageLayer"] = genericImageLayer;
  exports["decodeImageLayer"] = decodeImageLayer;
  exports["genericImageStyle"] = genericImageStyle;
  exports["decodeImageStyle"] = decodeImageStyle;
  exports["genericImageData"] = genericImageData;
  exports["decodeImageData"] = decodeImageData;
  exports["genericShapeLayer"] = genericShapeLayer;
  exports["decodeShapeLayer"] = decodeShapeLayer;
  exports["genericShapeStyle"] = genericShapeStyle;
  exports["decodeShapeStyle"] = decodeShapeStyle;
  exports["genericFill"] = genericFill;
  exports["decodeFill"] = decodeFill;
  exports["genericBorder"] = genericBorder;
  exports["decodeBorder"] = decodeBorder;
  exports["genericPoints"] = genericPoints;
  exports["decodePoints"] = decodePoints;
  exports["genericShadow"] = genericShadow;
  exports["encodeShadow"] = encodeShadow;
  exports["decodeShadow"] = decodeShadow;
  exports["genericGradient"] = genericGradient;
  exports["decodeGradient"] = decodeGradient;
  exports["genericStop"] = genericStop;
  exports["decodeStop"] = decodeStop;
  exports["genericPoint"] = genericPoint;
  exports["decodePoint"] = decodePoint;
  exports["genericExportFormat"] = genericExportFormat;
  exports["decodeExportFormat"] = decodeExportFormat;
  exports["genericBackground"] = genericBackground;
  exports["decodeBackground"] = decodeBackground;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Sketch.Dom"] = $PS["Sketch.Dom"] || {};
  var exports = $PS["Sketch.Dom"];
  var $foreign = $PS["Sketch.Dom"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];
  var Foreign_Class = $PS["Foreign.Class"];
  var Sketch_Types = $PS["Sketch.Types"];

  var selectedLayers = function __do() {
    var v = Data_Functor.map(Effect.functorEffect)(Foreign_Class.decode(Foreign_Class.arrayDecode(Sketch_Types.decodeLayer)))($foreign.selection)();
    var v1 = Control_Monad_Except.runExcept(v);

    if (v1 instanceof Data_Either.Left) {
      return new Data_Either.Left("Error Fetching Selection");
    }

    ;

    if (v1 instanceof Data_Either.Right) {
      return new Data_Either.Right(v1.value0);
    }

    ;
    throw new Error("Failed pattern match at Sketch.Dom (line 33, column 10 - line 35, column 27): " + [v1.constructor.name]);
  };

  exports["selectedLayers"] = selectedLayers;
})(PS);

(function (exports) {
  "use strict";

  var settings = __webpack_require__(/*! sketch/settings */ "sketch/settings");

  exports["globalSettingForKey"] = function (key) {
    return function () {
      return settings.globalSettingForKey(key);
    };
  };

  exports["setGlobalSettingForKey"] = function (key) {
    return function (data) {
      return function () {
        settings.setGlobalSettingForKey(key, data);
        return {};
      };
    };
  };
})(PS["Sketch.Settings"] = PS["Sketch.Settings"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Sketch.Settings"] = $PS["Sketch.Settings"] || {};
  var exports = $PS["Sketch.Settings"];
  var $foreign = $PS["Sketch.Settings"];
  exports["globalSettingForKey"] = $foreign.globalSettingForKey;
  exports["setGlobalSettingForKey"] = $foreign.setGlobalSettingForKey;
})(PS);

(function (exports) {
  "use strict";

  var ui = __webpack_require__(/*! sketch/ui */ "sketch/ui");

  exports["alert"] = function (title) {
    return function (helpText) {
      return function () {
        ui.alert(title, helpText);
        return {};
      };
    };
  };

  exports["message"] = function (text) {
    return function () {
      ui.message(text);
      return {};
    };
  };
})(PS["Sketch.UI"] = PS["Sketch.UI"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Sketch.UI"] = $PS["Sketch.UI"] || {};
  var exports = $PS["Sketch.UI"];
  var $foreign = $PS["Sketch.UI"];
  exports["alert"] = $foreign.alert;
  exports["message"] = $foreign.message;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var $foreign = $PS["Main"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Foreign_Class = $PS["Foreign.Class"];
  var Sketch_Dom = $PS["Sketch.Dom"];
  var Sketch_Settings = $PS["Sketch.Settings"];
  var Sketch_Types = $PS["Sketch.Types"];
  var Sketch_UI = $PS["Sketch.UI"];

  var removeShadows = function () {
    var removeShadow = function removeShadow(layer) {
      return $foreign.removeShadowsForLayerID(function () {
        if (layer instanceof Sketch_Types.Text) {
          return layer.value0.id;
        }

        ;

        if (layer instanceof Sketch_Types.Image) {
          return layer.value0.id;
        }

        ;

        if (layer instanceof Sketch_Types.Shape) {
          return layer.value0.id;
        }

        ;

        if (layer instanceof Sketch_Types.Group) {
          return layer.value0.id;
        }

        ;

        if (layer instanceof Sketch_Types.Artboard) {
          return layer.value0.id;
        }

        ;
        throw new Error("Failed pattern match at Main (line 110, column 50 - line 115, column 41): " + [layer.constructor.name]);
      }());
    };

    return function __do() {
      var v = Sketch_Dom.selectedLayers();

      if (v instanceof Data_Either.Left) {
        return Sketch_UI.message("Something went wrong...")();
      }

      ;

      if (v instanceof Data_Either.Right) {
        var v1 = Data_Array.length(v.value0);

        if (v1 === 0) {
          return Sketch_UI.alert("No Selection")("Please select a layer and try again...")();
        }

        ;
        var v2 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(removeShadow)(v.value0)();
        return Data_Unit.unit;
      }

      ;
      throw new Error("Failed pattern match at Main (line 100, column 26 - line 107, column 20): " + [v.constructor.name]);
    };
  }();

  var pasteShadows = function () {
    var fetchShadows = function __do() {
      var v = Data_Functor.map(Effect.functorEffect)(Foreign_Class.decode(Foreign_Class.arrayDecode(Sketch_Types.decodeShadow)))(Sketch_Settings.globalSettingForKey("copied-shadows"))();
      var v1 = Control_Monad_Except.runExcept(v);

      if (v1 instanceof Data_Either.Left) {
        return new Data_Either.Left("Error Fetching Shadows");
      }

      ;

      if (v1 instanceof Data_Either.Right) {
        return new Data_Either.Right(v1.value0);
      }

      ;
      throw new Error("Failed pattern match at Main (line 61, column 14 - line 63, column 39): " + [v1.constructor.name]);
    };

    var applyShadow = function applyShadow(shadows) {
      return function (layer) {
        var id = function () {
          if (layer instanceof Sketch_Types.Text) {
            return layer.value0.id;
          }

          ;

          if (layer instanceof Sketch_Types.Image) {
            return layer.value0.id;
          }

          ;

          if (layer instanceof Sketch_Types.Shape) {
            return layer.value0.id;
          }

          ;

          if (layer instanceof Sketch_Types.Group) {
            return layer.value0.id;
          }

          ;

          if (layer instanceof Sketch_Types.Artboard) {
            return layer.value0.id;
          }

          ;
          throw new Error("Failed pattern match at Main (line 67, column 16 - line 72, column 49): " + [layer.constructor.name]);
        }();

        return $foreign.setShadowsForLayerID(id)(Foreign_Class.encode(Foreign_Class.arrayEncode(Sketch_Types.encodeShadow))(shadows));
      };
    };

    return function __do() {
      var v = Sketch_Dom.selectedLayers();
      var v1 = fetchShadows();

      if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
        return Sketch_UI.message("Something went wrong...")();
      }

      ;

      if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
        var v2 = Data_Array.length(v.value0);

        if (v2 === 0) {
          return Sketch_UI.alert("No Selection")("Please select a layer and try again...")();
        }

        ;
        var v3 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(applyShadow(v1.value0))(v.value0)();
        return Data_Unit.unit;
      }

      ;
      return Sketch_UI.message("Something went wrong...")();
    };
  }();

  var cutShadows = function __do() {
    var v = Sketch_Dom.selectedLayers();

    if (v instanceof Data_Either.Left) {
      return Sketch_UI.message("Something went wrong...")();
    }

    ;

    if (v instanceof Data_Either.Right) {
      var v1 = Data_Array.length(v.value0);

      if (v1 === 0) {
        return Sketch_UI.alert("No Selection")("Please select a layer and try again...")();
      }

      ;

      if (v1 === 1) {
        var v2 = Data_Array.head(v.value0);

        if (v2 instanceof Data_Maybe.Nothing) {
          return Sketch_UI.message("Something went wrong...")();
        }

        ;

        if (v2 instanceof Data_Maybe.Just && v2.value0 instanceof Sketch_Types.Shape) {
          if (v2.value0.value0.shapeType === "Rectangle") {
            if (v2.value0.value0.style.shadows instanceof Data_Maybe.Nothing) {
              return Data_Unit.unit;
            }

            ;

            if (v2.value0.value0.style.shadows instanceof Data_Maybe.Just) {
              Sketch_Settings.setGlobalSettingForKey("copied-shadows")(Foreign_Class.encode(Foreign_Class.arrayEncode(Sketch_Types.encodeShadow))(v2.value0.value0.style.shadows.value0))();
              return $foreign.removeShadowsForLayerID(v2.value0.value0.id)();
            }

            ;
            throw new Error("Failed pattern match at Main (line 89, column 19 - line 93, column 52): " + [v2.value0.value0.style.shadows.constructor.name]);
          }

          ;
          return Data_Unit.unit;
        }

        ;
        return Data_Unit.unit;
      }

      ;
      return Sketch_UI.alert("More than one layer selected")("Please select only one layer and try again...")();
    }

    ;
    throw new Error("Failed pattern match at Main (line 77, column 26 - line 98, column 1): " + [v.constructor.name]);
  };

  var copyShadows = function __do() {
    var v = Sketch_Dom.selectedLayers();

    if (v instanceof Data_Either.Left) {
      return Sketch_UI.message("Something went wrong...")();
    }

    ;

    if (v instanceof Data_Either.Right) {
      var v1 = Data_Array.length(v.value0);

      if (v1 === 0) {
        return Sketch_UI.alert("No Selection")("Please select a layer and try again...")();
      }

      ;

      if (v1 === 1) {
        var v2 = Data_Array.head(v.value0);

        if (v2 instanceof Data_Maybe.Nothing) {
          return Sketch_UI.message("Something went wrong...")();
        }

        ;

        if (v2 instanceof Data_Maybe.Just && v2.value0 instanceof Sketch_Types.Shape) {
          if (v2.value0.value0.shapeType === "Rectangle") {
            if (v2.value0.value0.style.shadows instanceof Data_Maybe.Nothing) {
              return Data_Unit.unit;
            }

            ;

            if (v2.value0.value0.style.shadows instanceof Data_Maybe.Just) {
              return Sketch_Settings.setGlobalSettingForKey("copied-shadows")(Foreign_Class.encode(Foreign_Class.arrayEncode(Sketch_Types.encodeShadow))(v2.value0.value0.style.shadows.value0))();
            }

            ;
            throw new Error("Failed pattern match at Main (line 35, column 19 - line 38, column 88): " + [v2.value0.value0.style.shadows.constructor.name]);
          }

          ;
          return Data_Unit.unit;
        }

        ;
        return Data_Unit.unit;
      }

      ;
      return Sketch_UI.alert("More than one layer selected")("Please select only one layer and try again...")();
    }

    ;
    throw new Error("Failed pattern match at Main (line 23, column 26 - line 43, column 1): " + [v.constructor.name]);
  };

  exports["copyShadows"] = copyShadows;
  exports["pasteShadows"] = pasteShadows;
  exports["cutShadows"] = cutShadows;
  exports["removeShadows"] = removeShadows;
  exports["setShadowsForLayerID"] = $foreign.setShadowsForLayerID;
  exports["removeShadowsForLayerID"] = $foreign.removeShadowsForLayerID;
})(PS);

module.exports = PS;

/***/ }),

/***/ "sketch/dom":
/*!*****************************!*\
  !*** external "sketch/dom" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("sketch/dom");

/***/ }),

/***/ "sketch/settings":
/*!**********************************!*\
  !*** external "sketch/settings" ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("sketch/settings");

/***/ }),

/***/ "sketch/ui":
/*!****************************!*\
  !*** external "sketch/ui" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("sketch/ui");

/***/ })

/******/ });
  if (key === 'default' && typeof exports === 'function') {
    exports(context);
  } else {
    exports[key](context);
  }
}
that['onRun'] = __skpm_run.bind(this, 'default')

//# sourceMappingURL=copy-shadows.js.map